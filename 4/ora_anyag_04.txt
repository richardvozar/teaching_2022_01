# ---------------------------------- #
Át kell még venni:
-függvények visszatérési értéke (return)
-listák
-break, continue utasítások a ciklusokhoz
-stringek, string műveletek: format, hossz, indexek, indetvallum indexek, str megfordítása, immutable típus, sztringkezelő függvények(lower,upper,startswith stb)
-fájlkezelés
-if valami in iterálható_cucc

13 hét múlva lesz kb a vizsga, az nekünk 26 alkalom
Át kell még vennünk kb 6-7 anyagrészt.
Mivel órán az anyag leadása az elsődleges, fontos, hogy a gyakorló feladatok legyenek csinálva.
Amit én elmondok az kb 15-20%, a maradék 80-85% azon múlik, hogy mennyit gyakorol az ember.

Az a terv, hogy a következő 2-3 hétben az órákon még anyagokat mutatok, aztán átadjuk a stafétabotot neked, és együtt gyakorlunk, majd az utolsó néhány héten érettségi feladatokat oldunk meg.

A mai órát kb 45 percre terveztem, de az előző órákból látva valószínűleg kitöltjük a 60 percet, majd látjuk.

Óra végén meg megdumázhatnánk hogy a keddi időpontokat hova tegyük át.
# ---------------------------------- #




# lista bejárása

# lista egy adatszerkezet, amely értékeket tárol
# lista létrehozása:
ures_lista_1 = list()
ures_lista_2 = []
nevek = ["Jani", "Feri", "Sanyi"]

# listákat lehet változtatni!!
# listához elemek hozzáadása: .append()
szamok = []
szamok.append(1)
szamok.append(2)
szamok.append(3)
print(szamok) # [1, 2, 3]
# észrevétel: mindig a végére szúrja be!

# ugyanaz az érték többször is szerepelhet!!
szamok.append(3)
print(szamok) # [1, 2, 3, 3]

# a listák tárolnak sorrendet, azaz van első, második, harmadik stb. elemük
# listaelem lekérdezése: lista_neve[index]  (0-tól indexelünk, tehát az első elem a nulladik elem)
print(szamok[0]) # 1
# utolsó elem lekérdezése: -1 index
# mi van akkor, ha olyan indexű elemet kérünk le, ami nem létezik??
# lista hossza: len()
print(len(szamok))


# LISTÁK 3 TULAJDONSÁGA: VÁLTOZTATHATÓ, MEGENGEDI A DUPLIKÁCIÓT, VAN SORRENDISÉG!
# VÁLTOZTATHATÓ: meg tudjuk változtatni az adott indexű elemet, hozzá tudunk adni elemet, törölni tudunk elemet
# MEGENGEDI A DUPLIKÁCIÓT: szerepelhet kétszer ugyanaz az elem
# VAN SORRENDISÉG: van sorrendje, és az a sorrend nem fog változni magától


# lista bejárása most már tényleg

for szam in szamok:
	print(szam)
# 1
# 2
# 3


# break és continue
# break: megállítja a ciklust
# continue: a maradék kódrészletet kihagyva a következő ciklusra ugrik

for i in range(1, 100):
    print(i)

    if i == 42:
        print("Megtaláltuk az élet értelmét!")
        break


print("A legjobb pizzafeltétek:")

feltetek = ["sajt", "bacon", "ananász", "pepperoni"]

for feltet in feltetek:
    if feltet == "ananász":
        continue
    print(feltet)






########### STAFÉTA ÁTADÁSA --> NÉZZÜNK EGY-KÉT FELADATOT ############

-Írjunk egy programot, ami összeszorozza 1-től 10-ig számokat, eltárolja az eredményt, majd kiírja.

-Módosítsuk a for ciklust úgy, hogy csak minden 3-mal osztható számot szorozzon össze!

-Készíts egy függvényt, ami kiszámítja a paraméterben kapott egész számnál kisebb páratlan pozitív egész számok összegét!